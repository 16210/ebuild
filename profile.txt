<系统轮廓> 的格式如下：
(<相对路径> <eapi> <系统轮廓内容> (<父系统轮廓的<相对路径>>...) <已遍历?> <继承树中包含循环?> <继承深度>)
<系统轮廓*> 的格式如下：
(<相对路径> <eapi> <系统轮廓内容>)

其中：
* <相对路径> 是从 [系统轮廓] 目录到系统轮廓的相对路径。
* <eapi> 在继承树中不包含循环时有以下两种取值：
    :unsupported	代表两种情况：1. 此系统轮廓使用的是软件包管理器不支持的 EAPI
    				2. 此系统轮廓的继承树中有某个系统轮廓属于前一种情况
    一个字符串		此系统轮廓使用的 EAPI。这种取值代表不属于前两种情况
  当继承树未遍历或包含循环时 <eapi> 无效，使用 nil 表示
* <已遍历?> --- 是否已经遍历过此系统轮廓的继承树
* <继承深度> 是一个整数，若没有父系统轮廓就是 0，否则是最大父系统轮廓<继承深度>+1。
  当继承树中包含循环时 <继承深度> 无效
* <系统轮廓内容> 是如下列表：
  (<构建配置> <软件包分组> <软件包屏蔽列表>
   <全局启用> <全局屏蔽> <稳定版全局启用> <稳定版全局屏蔽>
   <局部启用> <局部屏蔽> <稳定版局部启用> <稳定版局部屏蔽>)
  <构建配置> --- ((<变量名> . <变量值>)...)，对于递增式变量，<变量值> 是它的标记列表，对于非递增式变量，<变量值> 是一个字符串
  <软件包分组> --- ((<组名> . <成员列表>)...)，<成员列表> 是已展开的成员组成的列表
  <软件包屏蔽列表> --- (<软件包屏蔽>...)
  <软件包屏蔽> --- (<软件包依赖说明符> . <屏蔽?>)
  <<全局>> --- 一个列表，每一项就是文件中的一行
  <<局部>> --- 一个格式为 ((<目标> . ((<选定?> . <应用标志>)...))...) 的关联列表，关联列表中的每一项是<<局部>>文件展开分组后的每一项
  在 <系统轮廓> 初始化时 <系统轮廓内容> 应设为 (nil nil nil nil nil nil nil nil nil nil nil)
